services:
  db-init:
    image: curlimages/curl:latest
    container_name: db-init
    volumes:
      - dumps:/dumps
    user: "0:0"
    environment:
      - GITHUB_REPO=${GITHUB_REPO}
      - RELEASE_TAG=${RELEASE_TAG}
      - DUMP_FILENAME=${DUMP_FILENAME}
    command: >
      sh -c "
        echo '=== INIT MODE: Downloading dump ===' &&
        mkdir -p /dumps &&
        chmod 777 /dumps &&
        curl -L -o '$DUMP_PATH' 'https://github.com/$GITHUB_REPO/releases/download/$RELEASE_TAG/$DUMP_FILENAME' &&
        echo 'Dump downloaded:' &&
        ls -lh /dumps/ &&
        du -h /dumps/db_dump.backup
      "
    profiles:
      - init
    restart: "no"

  postgres:
    image: ankane/pgvector:latest
    container_name: postgres_vector
    depends_on:
      db-init:
        condition: service_completed_successfully
        required: false
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DUMP_PATH=${DUMP_PATH}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - dumps:/dumps:ro
      - ./init-scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./init-scripts/pull-llama-model.sh:/init-ollama.sh
    environment:
      - MODEL_NAMES=${MODEL_NAMES}
    entrypoint: /bin/sh
    command: /init-ollama.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      # test: ["CMD-SHELL", "curl -f http://localhost:11434/api/tags | jq -e '.models[] | select(.name == \"${MODEL_NAME}\")' > /dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: always

volumes:
  dumps:
  postgres-data:
  ollama_data: