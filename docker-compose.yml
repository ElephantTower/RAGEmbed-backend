services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT}:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    restart: always

  postgres:
    image: ankane/pgvector:latest
    container_name: postgres_vector
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ollama_data:/root/.ollama
      - ./init-scripts/pull-llama-model.sh:/init-ollama.sh
    environment:
      - MODEL_NAMES=${MODEL_NAMES}
    entrypoint: /bin/sh
    command: /init-ollama.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      # test: ["CMD-SHELL", "curl -f http://localhost:11434/api/tags | jq -e '.models[] | select(.name == \"${MODEL_NAME}\")' > /dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: always

volumes:
  postgres-data:
  ollama_data: